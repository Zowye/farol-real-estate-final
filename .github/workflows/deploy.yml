name: CI/CD to Cloud Run

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "ERRO: GCP_SA_KEY não está definido"
            exit 1
          else
            echo "GCP_SA_KEY está disponível (valor oculto por segurança)"
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Build & Push Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate/real-estate-bff:${{ github.sha }}"
          # Usando timeout e redirecionamento para suprimir logs
          timeout 600 gcloud builds submit --tag $IMAGE . --quiet > /dev/null 2>&1 || true
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Verify image was built
        run: |
          # Verifica se a imagem foi criada com sucesso
          gcloud artifacts docker images list us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate --filter="tags:${{ github.sha }}" --format="value(name)" | grep real-estate-bff
          if [ $? -ne 0 ]; then
            echo "ERRO: Falha ao construir a imagem Docker"
            exit 1
          fi

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --quiet > /dev/null 2>&1

      - name: Verify deployment
        run: |
          # Verifica se o deploy foi bem-sucedido
          gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE }} \
            --region ${{ secrets.GCP_REGION }} \
            --format="value(status.url)" > /dev/null 2>&1
          echo "Deploy realizado com sucesso!"