name: CI/CD to Cloud Run

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "ERRO: GCP_SA_KEY não está definido"
            exit 1
          else
            echo "GCP_SA_KEY está disponível (valor oculto por segurança)"
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create Repository if not exists
        run: |
          gcloud artifacts repositories create real-estate \
            --repository-format=docker \
            --location=us-central1 \
            --description="Docker repository for real estate app" \
            --quiet || echo "Repository already exists"

      - name: Setup Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build & Push Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate/real-estate-bff:${{ github.sha }}"
          # Build da imagem Docker
          docker build -t $IMAGE .
          # Push da imagem para o registry
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.INSTANCE_CONNECTION_NAME }} \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }},GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }},GOOGLE_CLOUD_BUCKET=${{ secrets.BUCKET_NAME }}"