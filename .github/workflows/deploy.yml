name: CI/CD to Cloud Run

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "‚ùå ERRO: GCP_SA_KEY n√£o est√° definido"
            exit 1
          else
            echo "‚úÖ GCP_SA_KEY est√° dispon√≠vel (valor oculto por seguran√ßa)"
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: "latest"

      - name: Build & Push Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate/real-estate-bff:${{ github.sha }}"
          echo "üî® Iniciando build da imagem: $IMAGE"
          if ! gcloud builds submit --tag $IMAGE . --quiet; then
            echo "‚ö†Ô∏è Aviso: erro de stream de logs (prov√°vel), mas o build pode ter continuado no GCP"
          fi
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Verify image was built
        run: |
          echo "üîç Verificando se a imagem foi criada no Artifact Registry..."
          gcloud artifacts docker images list us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate \
            --filter="tags:${{ github.sha }}" \
            --format="value(name)" | grep real-estate-bff || (echo "‚ùå ERRO: imagem n√£o encontrada" && exit 1)
          echo "‚úÖ Imagem encontrada no Artifact Registry"

      - name: Deploy to Cloud Run
        run: |
          echo "üöÄ Fazendo deploy para Cloud Run..."
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --quiet
          echo "‚úÖ Deploy conclu√≠do com sucesso"
