name: CI/CD to Cloud Run

on:
  push:
    branches: ["main"]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug secrets
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "ERRO: GCP_SA_KEY não está definido"
            exit 1
          else
            echo "GCP_SA_KEY está disponível (valor oculto por segurança)"
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Build & Push Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/real-estate/real-estate-bff:${{ github.sha }}"
          # Build silencioso com verificação de erro
          if ! gcloud builds submit --tag $IMAGE . --quiet 2>/dev/null; then
            echo "ERRO: Falha no build da imagem Docker"
            exit 1
          fi
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Verify image was built
        run: |
          # Verificação mais simples e direta
          if gcloud container images describe $IMAGE > /dev/null 2>&1; then
            echo "✓ Imagem verificada com sucesso"
          else
            echo "ERRO: Imagem não encontrada no registro"
            exit 1
          fi

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --quiet

      - name: Verify deployment
        run: |
          # Verificação simplificada do deploy
          URL=$(gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE }} \
            --region ${{ secrets.GCP_REGION }} \
            --format="value(status.url)" 2>/dev/null || true)
          
          if [ -n "$URL" ]; then
            echo "✓ Deploy realizado com sucesso: $URL"
          else
            echo "ERRO: Falha ao verificar o deploy"
            exit 1
          fi